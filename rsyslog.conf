# rsyslog configuration file
# note that most of this config file uses old-style format,
# because it is well-known AND quite suitable for simple cases
# like we have with the default config. For more advanced 
# things, RainerScript configuration is suggested.

# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html

#### MODULES ####

module(load="impstats" interval="1" resetcounters="on")
module(load="imuxsock")
module(load="imklog")
#module(load"immark")
module(load="imudp") # needs to be done just once
input(type="imudp" port="514" InputName="UDP")
module(load="imptcp") # needs to be done just once
input(type="imptcp" port="514" keepalive="on" keepalive.interval="20" keepalive.time="20")
module(load="omprog")

#### GLOBAL DIRECTIVES ####

# Use default timestamp format
$ActionFileDefaultTemplate RSYSLOG_FileFormat

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf

######### LOCAL RULES

if $fromhost-ip == '127.0.0.1' then {
  if $syslogseverity <= '6' and not ( $syslogfacility-text contains 'mail' or $syslogfacility-text contains 'authpriv' or $syslogfacility-text contains 'cron' or $syslogtag contains 'rsyslogd-pstats' or $programname == "log_mgmt_summary") then /var/log/messages
  if $syslogfacility-text contains 'authpriv' then /var/log/secure
  if $syslogfacility-text contains 'mail' then -/var/log/maillog
  if $syslogfacility-text contains 'cron' then /var/log/cron
  if $syslogseverity-text contains 'emerg' then :omusrmsg:*
  if $syslogfacility-text contains 'local7' then /var/log/boot.log
  #if $syslogtag contains "rsyslogd-pstats" then {
  #  action(type="omfile" queue.type="linkedlist" queue.discardmark="980" name="pstats" file="/var/log/rsyslogd-pstats")
  #}
}

######## remote logging

$template DYNsyslog,"/mnt/store/operations/linux_messages_syslog/%hostname%/messages"
$template DYNapache,"/mnt/store/operations/access_combined/%hostname%/access_combined"
$template DYNwindows,"/mnt/store/operations/windows/%hostname%/snare"
$template DYNsecure,"/mnt/store/operations/linux_secure/%hostname%/secure"
$template DYNmaillog,"/mnt/store/operations/postfix_syslog/%hostname%/maillog"
$template DYNcron,"/mnt/store/operations/cron/%hostname%/cron"
$template DYNspooler,"/mnt/store/operations/spooler/%hostname%/spooler"
$template DYNboot,"/mnt/store/operations/linux_bootlog/%hostname%/boot"
template(name="DYNwireless" type="string" string="/mnt/store/operations/wireless/%hostname%/wireless.log")
template(name="DYNlog_mgmt_stats" type="string" string="/mnt/store/log_mgmt_stats/%hostname%/log_mgmt_stats.log")
template(name="DYNlog_mgmt_summary" type="string" string="/mnt/store/log_mgmt_stats/%hostname%/log_mgmt_summary.log")
template(name="DYNsiteminder" type="string" string="/mnt/store/operations/siteminder/%hostname%/siteminder.log")
template(name="DYNfelix" type="string" string="/mnt/store/operations/felix/%hostname%/felix.log")
template(name="DYNcisco_acs" type="string" string="/mnt/store/operations/cisco_acs/%hostname%/cisco_acs.log")
template(name="DYNvmware" type="string" string="/mnt/store/operations/vmware/%hostname%/vmware.log")
template(name="DYNnagios" type="string" string="/mnt/store/operations/nagios/%hostname%/nagios.log")
template(name="DYNdigital-apache-access_combined" type="string" string="/mnt/store/digital/apache/%hostname%/access_combined")

if $syslogtag == "apache" then {
	action(type="omfile" name="DYNapache" DynaFile="DYNapache")
	stop
}
else if $programname == "digital-apache-access_combined" then {
	action(type="omfile" name="DYNdigital-apache-access_combined" DynaFile="DYNdigital-apache-access_combined")
	stop
}
else if $syslogfacility-text contains 'authpriv' then {
	action(type="omfile" name="DYNsecure" DynaFile="DYNsecure")
	stop
}
#if $syslogfacility-text contains 'mail' then action(type="omfile" name="DYNmaillog" DynaFile="DYNmaillog")
else if $syslogtag contains ['postfix', 'spamd'] then {
	action(type="omfile" name="DYNmaillog" DynaFile="DYNmaillog")
	stop
}
else if $syslogfacility-text contains 'cron' then {
	action(type="omfile" name="DYNcron" DynaFile="DYNcron")
	stop
}
else if $syslogfacility-text contains 'local7' then {
	action(type="omfile" name="DYNboot" DynaFile="DYNboot")
	stop
}

# Log Singlepoint Messages DISABLED FOR NOW
#$template SINGLEPOINT_LogFormat,"%syslogpriority%,%syslogfacility%,%timegenerated::fulltime%,%HOSTNAME%,%syslogtag%,%msgid%,%structured-data%,%msg%\n"
#:syslogtag, startswith, "SINGLEPOINT"   /var/log/sp.log;SINGLEPOINT_LogFormat

# Log Wireless Access Points
# note this can be replaced by regex due to travis allen's work

else if $programname == ["SF-RealGravityWLC-5508", "snilar-wlc10-5508-MDF7-rk2
", "snivic-wlc10-5508-IDF4-rk2", "sndtwlc10-2112-idf2.0", "1180WLC-5508", "ChelseaWLC-5508", "UnionSquareWLC-5508", "ChevyChaseWLC-5508", "sni_sng-5508-wlc10-sw1-rk3", "sncnapwlc10-4400", "sngacwlc-10-4400-idf3", "KnoxWLC-5508", "snkxapwlc-192-4400-stdb", "snchwlc10-2112", "snlawlc07-2112", "WLC_Atlanta", "snkxbcwlc-10-4402", "DMZ_WLC-5508"] then {
	action(type="omfile" name="DYNwireless" DynaFile="DYNwireless")
	stop
}
else if $syslogtag contains "rsyslogd-pstats" then {
	action(type="omprog" binary="/opt/log_mgmt/log_mgmt_parse.pl")
	# UNCOMMENT TO SEND TO FILE FOR DEBUGGING.
	# action(type="omfile" name="DYNlog_mgmt_stats" DynaFile="DYNlog_mgmt_stats")
	stop
}
else if $programname == "log_mgmt_summary" then {
	action(type="omfile" name="DYNlog_mgmt_summary" DynaFile="DYNlog_mgmt_summary")
	stop
}
if $programname == "siteminder" then {
	action(type="omfile" name="DYNsiteminder" DynaFile="DYNsiteminder")
	stop
}
else if $programname == "felix" then {
	action(type="omfile" name="DYNfelix" DynaFile="DYNfelix")
	stop
}
else if $programname contains 'CisACS' then {
	action(type="omfile" name="DYNcisco_acs" DynaFile="DYNcisco_acs")
	action(type="omfwd" port="514" protocol="udp" target="10.42.5.100")
	stop
}
else if $programname contains ['Vpxa', 'Hostd', 'vmkwarning', 'vmkernel', 'watchdog-sensord', 'Fdm', 'heartbeat'] then {
	action(type="omfile" name="DYNvmware" DynaFile="DYNvmware")
	stop
}
else if $programname contains 'nagios' then {
	action(type="omfile" name="DYNnagios" DynaFile="DYNnagios")
	stop
}
# DEFAULT ACTION
else {
	action(type="omfile" name="DYNsyslog" DynaFile="DYNsyslog")
}
